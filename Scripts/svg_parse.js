const parse_path = (path, x = 0, y = 0) => {
    let at = 0;
    path = path.replaceAll(/[A-Za-z]/g, str => ' ' + str + ' ').replaceAll(",", " ").replaceAll("-", " -");
    path = path.slice(1, path.length - 1).split(' ').filter(x => x);
    path = path.map(x => {
        x = x.split(".");
        if (x.length == 1) return x;
        if (x.length == 2) return x[0] + "." + x[1];
        let first = x.shift();
        x = x.map(y => "0." + y);
        x[0] = first + x[0].slice(1);
        return x;
    }).flat();
    let ret_str = 'ctx.begin_path();\n';
    let curr_op = 'm';
    const bx = x, by = y;
    const op_parse = _ => {
        switch(curr_op)
        {
            case 'M':
                x = parseFloat(path[at++]) + bx;
                y = parseFloat(path[at++]) + by;
                ret_str += `ctx.move_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            case 'L':
            {
                const prev_x = x;
                const prev_y = y;
                x = parseFloat(path[at++]) + bx;
                y = parseFloat(path[at++]) + by;
                if (Math.abs(x - prev_x) > 0.001 || Math.abs(y - prev_y) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'H':
            {
                const prev_x = x;
                x = parseFloat(path[at++]) + bx;
                if (Math.abs(x - prev_x) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'V':
            {
                const prev_y = y;
                y = parseFloat(path[at++]) + by;
                if (Math.abs(y - prev_y) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'Q':
            {
                const x1 = parseFloat(path[at++]) + bx;
                const y1 = parseFloat(path[at++]) + by;
                x = parseFloat(path[at++]) + bx;
                y = parseFloat(path[at++]) + by;
                ret_str += `ctx.qcurve_to(${x1.toFixed(2)}, ${y1.toFixed(2)}, ${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'C':
            {
                const x1 = parseFloat(path[at++]) + bx;
                const y1 = parseFloat(path[at++]) + by;
                const x2 = parseFloat(path[at++]) + bx;
                const y2 = parseFloat(path[at++]) + by;
                x = parseFloat(path[at++]) + bx;
                y = parseFloat(path[at++]) + by;
                ret_str += `ctx.bcurve_to(${x1.toFixed(2)}, ${y1.toFixed(2)}, ${x2.toFixed(2)}, ${y2.toFixed(2)}, ${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'm':
                x += parseFloat(path[at++]);
                y += parseFloat(path[at++]);
                ret_str += `ctx.move_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            case 'l':
            {
                const prev_x = x;
                const prev_y = y;
                x += parseFloat(path[at++]);
                y += parseFloat(path[at++]);
                if (Math.abs(x - prev_x) > 0.001 || Math.abs(y - prev_y) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'h':
            {
                const prev_x = x;
                x += parseFloat(path[at++]);
                if (Math.abs(x - prev_x) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'v':
            {
                const prev_y = y;
                y += parseFloat(path[at++]);
                if (Math.abs(y - prev_y) > 0.001)
                    ret_str += `ctx.line_to(${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'q':
            {
                const x1 = x + parseFloat(path[at++]);
                const y1 = y + parseFloat(path[at++]);
                x += parseFloat(path[at++]);
                y += parseFloat(path[at++]);
                ret_str += `ctx.qcurve_to(${x1.toFixed(2)}, ${y1.toFixed(2)}, ${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'c':
            {
                const x1 = x + parseFloat(path[at++]);
                const y1 = y + parseFloat(path[at++]);
                const x2 = x + parseFloat(path[at++]);
                const y2 = y + parseFloat(path[at++]);
                x += parseFloat(path[at++]);
                y += parseFloat(path[at++]);
                ret_str += `ctx.bcurve_to(${x1.toFixed(2)}, ${y1.toFixed(2)}, ${x2.toFixed(2)}, ${y2.toFixed(2)}, ${x.toFixed(2)}, ${y.toFixed(2)});\n`;
                break;
            }
            case 'z':
                console.log("uh");
                break;
            default:
                throw new Error('uh oh: ' + path[at] + ' ' + path.slice(at - 10, at + 10));
        }
    }
    while (at < path.length)
    {
        if (!Number.isFinite(parseFloat(path[at])))    
            curr_op = path[at++];
        console.log(at, path.length);
        op_parse();
    }
    return ret_str;
}

const parse_svg = str => {
    let doc = new DOMParser().parseFromString(str, 'text/xml');
    const [offset_x, offset_y] = doc.getElementsByTagName('svg')[0].attributes.viewBox.value.split(' ').map(x => parseFloat(x)).slice(2);
    doc = [...doc.getElementsByTagName('path')].map(x => x.attributes).filter(x => !x["clip-rule"] && (!x["fill-opacity"] || parseFloat(x["fill-opacity"].nodeValue) !== 0));
    let ret = "";
    for (let x of doc)
    {
        if (x["fill"])
        {
            if (x["fill-opacity"])
                ret += `rr_renderer_set_fill(renderer, 0x${((x["fill-opacity"].nodeValue * 255) | 0).toString(16).padStart(2, '0')}${x["fill"].nodeValue.slice(1)});\n`;
            else
                ret += `rr_renderer_set_fill(renderer, 0xff${x["fill"].nodeValue.slice(1)});\n`;
        }
        ret += parse_path(x["d"].nodeValue, -offset_x / 2, -offset_y / 2);
        if (x["fill"])
            ret += `rr_renderer_fill(renderer);\n`;
    }
    console.log(ret);
}

const transform_path = str => str.replaceAll(");","").replaceAll("path.MoveTo(","M").replaceAll("path.BezierCurveTo(","C").replaceAll("path.QuadraticCurveTo(","Q").replaceAll("path.LineTo(","L").replaceAll('\n', ' ').replaceAll("path.ClosePath(", "");

console.log(parse_path(`M30 0Q30 0.736459 29.9639 1.47203Q29.9277 2.2076 29.8555 2.94051Q29.7834 3.67343 29.6753 4.40191Q29.5672 5.1304 29.4236 5.85271Q29.2799 6.57502 29.1009 7.2894Q28.922 8.00379 28.7082 8.70854Q28.4944 9.41329 28.2463 10.1067Q27.9982 10.8001 27.7164 11.4805Q27.4346 12.1609 27.1197 12.8267Q26.8048 13.4924 26.4576 14.1419Q26.1105 14.7914 25.7319 15.4231Q25.3532 16.0548 24.9441 16.6671Q24.5349 17.2794 24.0962 17.871Q23.6575 18.4625 23.1903 19.0318Q22.7231 19.6011 22.2285 20.1468Q21.734 20.6924 21.2132 21.2132Q20.6924 21.734 20.1468 22.2285Q19.6011 22.7231 19.0318 23.1903Q18.4625 23.6575 17.871 24.0962Q17.2794 24.5349 16.6671 24.9441Q16.0548 25.3532 15.4231 25.7319Q14.7914 26.1105 14.1419 26.4576Q13.4924 26.8048 12.8267 27.1197Q12.1609 27.4346 11.4805 27.7164Q10.8001 27.9982 10.1067 28.2463Q9.41329 28.4944 8.70854 28.7082Q8.00379 28.922 7.2894 29.1009Q6.57502 29.2799 5.85271 29.4236Q5.1304 29.5672 4.40191 29.6753Q3.67343 29.7834 2.94051 29.8555Q2.2076 29.9277 1.47203 29.9639Q0.736459 30 0 30Q-0.736459 30 -1.47203 29.9639Q-2.2076 29.9277 -2.94051 29.8555Q-3.67343 29.7834 -4.40191 29.6753Q-5.1304 29.5672 -5.85271 29.4236Q-6.57502 29.2799 -7.2894 29.1009Q-8.00379 28.922 -8.70854 28.7082Q-9.41329 28.4944 -10.1067 28.2463Q-10.8001 27.9982 -11.4805 27.7164Q-12.1609 27.4346 -12.8267 27.1197Q-13.4924 26.8048 -14.1419 26.4576Q-14.7914 26.1105 -15.4231 25.7319Q-16.0548 25.3532 -16.6671 24.9441Q-17.2794 24.5349 -17.871 24.0962Q-18.4625 23.6575 -19.0318 23.1903Q-19.6011 22.7231 -20.1468 22.2285Q-20.6924 21.734 -21.2132 21.2132Q-21.734 20.6924 -22.2285 20.1468Q-22.7231 19.6011 -23.1903 19.0318Q-23.6575 18.4625 -24.0962 17.871Q-24.5349 17.2794 -24.9441 16.6671Q-25.3532 16.0548 -25.7319 15.4231Q-26.1105 14.7914 -26.4576 14.1419Q-26.8048 13.4924 -27.1197 12.8267Q-27.4346 12.1609 -27.7164 11.4805Q-27.9982 10.8001 -28.2463 10.1067Q-28.4944 9.41329 -28.7082 8.70854Q-28.922 8.00379 -29.1009 7.2894Q-29.2799 6.57502 -29.4236 5.85271Q-29.5672 5.1304 -29.6753 4.40191Q-29.7834 3.67343 -29.8555 2.94051Q-29.9277 2.2076 -29.9639 1.47203Q-30 0.736459 -30 0Q-30 -0.736459 -29.9639 -1.47203Q-29.9277 -2.2076 -29.8555 -2.94051Q-29.7834 -3.67343 -29.6753 -4.40191Q-29.5672 -5.1304 -29.4236 -5.85271Q-29.2799 -6.57502 -29.1009 -7.2894Q-28.922 -8.00379 -28.7082 -8.70854Q-28.4944 -9.41329 -28.2463 -10.1067Q-27.9982 -10.8001 -27.7164 -11.4805Q-27.4346 -12.1609 -27.1197 -12.8267Q-26.8048 -13.4924 -26.4576 -14.1419Q-26.1105 -14.7914 -25.7319 -15.4231Q-25.3532 -16.0548 -24.9441 -16.6671Q-24.5349 -17.2794 -24.0962 -17.871Q-23.6575 -18.4625 -23.1903 -19.0318Q-22.7231 -19.6011 -22.2285 -20.1468Q-21.734 -20.6924 -21.2132 -21.2132Q-20.6924 -21.734 -20.1468 -22.2285Q-19.6011 -22.7231 -19.0318 -23.1903Q-18.4625 -23.6575 -17.871 -24.0962Q-17.2794 -24.5349 -16.6671 -24.9441Q-16.0548 -25.3532 -15.4231 -25.7319Q-14.7914 -26.1105 -14.1419 -26.4576Q-13.4924 -26.8048 -12.8267 -27.1197Q-12.1609 -27.4346 -11.4805 -27.7164Q-10.8001 -27.9982 -10.1067 -28.2463Q-9.41329 -28.4944 -8.70854 -28.7082Q-8.00379 -28.922 -7.2894 -29.1009Q-6.57502 -29.2799 -5.85271 -29.4236Q-5.1304 -29.5672 -4.40191 -29.6753Q-3.67343 -29.7834 -2.94051 -29.8555Q-2.2076 -29.9277 -1.47203 -29.9639Q-0.736459 -30 0 -30Q0.736459 -30 1.47203 -29.9639Q2.2076 -29.9277 2.94051 -29.8555Q3.67343 -29.7834 4.40191 -29.6753Q5.1304 -29.5672 5.85271 -29.4236Q6.57502 -29.2799 7.2894 -29.1009Q8.00379 -28.922 8.70854 -28.7082Q9.41329 -28.4944 10.1067 -28.2463Q10.8001 -27.9982 11.4805 -27.7164Q12.1609 -27.4346 12.8267 -27.1197Q13.4924 -26.8048 14.1419 -26.4576Q14.7914 -26.1105 15.4231 -25.7319Q16.0548 -25.3532 16.6671 -24.9441Q17.2794 -24.5349 17.871 -24.0962Q18.4625 -23.6575 19.0318 -23.1903Q19.6011 -22.7231 20.1468 -22.2285Q20.6924 -21.734 21.2132 -21.2132Q21.734 -20.6924 22.2285 -20.1468Q22.7231 -19.6011 23.1903 -19.0318Q23.6575 -18.4625 24.0962 -17.871Q24.5349 -17.2794 24.9441 -16.6671Q25.3532 -16.0548 25.7319 -15.4231Q26.1105 -14.7914 26.4576 -14.1419Q26.8048 -13.4924 27.1197 -12.8267Q27.4346 -12.1609 27.7164 -11.4805Q27.9982 -10.8001 28.2463 -10.1067Q28.4944 -9.41329 28.7082 -8.70854Q28.922 -8.00379 29.1009 -7.2894Q29.2799 -6.57502 29.4236 -5.85271Q29.5672 -5.1304 29.6753 -4.40191Q29.7834 -3.67343 29.8555 -2.94051Q29.9277 -2.2076 29.9639 -1.47203Q30 -0.736459 30 0M76.512 36.576L76.512 76.834L83.172 76.113C85.675 75.653 86.73 73.725 86.788 71.595L87.23 55.343C87.281 53.453 87.7 51.558 88.937 50.555C90.175 49.553 91.692 49.11 91.449 47.513C90.599 41.937 88.719 27.632 84.819 23.209C80.918 18.787 63.7 10.685 55 10.685C46.3 10.685 29.082 18.787 25.182 23.209C21.282 27.632 19.401 41.937 18.552 47.513C18.308 49.11 19.825 49.553 21.062 50.555C22.301 51.558 22.719 53.453 22.77 55.343L23.212 71.595C23.27 73.725 24.325 75.654 26.829 76.113L33.489 76.833L33.489 36.577C38.79 33.57 48.281 30.56 55 30.56C61.719 30.56 71.209 33.57 76.512 36.576ZM59.072 11.135C61.112 11.522 63.344 12.145 65.632 12.924L62.416 31.463C60.299 31.007 58.213 30.695 56.301 30.596L59.072 11.135ZM72.596 15.693Q75.7143 17.0964 78.689 18.783L72.019 34.436Q69.2363 33.3028 66.352 32.461L72.596 15.693ZM76.512 34.625L89.207 34.625C89.663 36.661 90.039 38.695 90.367 40.625L76.512 40.625L76.512 34.625ZM91.275 46.375L91.449 47.512C91.693 49.109 90.175 49.552 88.937 50.555C88.38 51.005 87.997 51.645 87.73 52.375L76.512 52.375L76.512 46.375L91.275 46.375ZM87.155 58.125L86.99 64.125L76.512 64.125L76.512 58.125L87.155 58.125ZM86.834 69.875L86.787 71.595C86.729 73.725 85.675 75.655 83.172 76.113L76.512 76.834L76.512 69.875L86.834 69.875ZM50.928 11.135C48.888 11.522 46.656 12.145 44.368 12.924L47.584 31.463C49.701 31.007 51.787 30.695 53.699 30.596L50.928 11.135ZM37.404 15.693Q34.2857 17.0964 31.311 18.783L37.981 34.436Q40.7637 33.3028 43.648 32.461L37.404 15.693ZM33.488 34.625L20.793 34.625C20.337 36.661 19.961 38.695 19.633 40.625L33.488 40.625L33.488 34.625ZM18.725 46.375L18.551 47.512C18.307 49.109 19.825 49.552 21.063 50.555C21.62 51.005 22.003 51.645 22.27 52.375L33.488 52.375L33.488 46.375L18.725 46.375ZM22.845 58.125L23.01 64.125L33.488 64.125L33.488 58.125L22.845 58.125ZM23.166 69.875L23.213 71.595C23.271 73.725 24.325 75.655 26.828 76.113L33.488 76.834L33.488 69.875L23.166 69.875ZM79.7348 31.5216L83.9158 22.7776Q83.9583 22.6888 84.0173 22.6099Q84.0763 22.531 84.1496 22.4652Q84.2228 22.3994 84.3075 22.3491Q84.3922 22.2988 84.4851 22.266Q84.578 22.2332 84.6755 22.2192Q84.7729 22.2052 84.8713 22.2104Q84.9696 22.2157 85.0651 22.24Q85.1605 22.2643 85.2494 22.3068Q85.3382 22.3493 85.4171 22.4083Q85.4959 22.4673 85.5618 22.5406Q85.6276 22.6138 85.6779 22.6985Q85.7282 22.7832 85.761 22.8761Q85.7937 22.969 85.8078 23.0665Q85.8218 23.1639 85.8166 23.2623Q85.8113 23.3606 85.787 23.4561Q85.7626 23.5515 85.7202 23.6404L81.5392 32.3844Q81.4967 32.4732 81.4377 32.5521Q81.3787 32.631 81.3054 32.6968Q81.2321 32.7626 81.1475 32.8129Q81.0628 32.8632 80.9699 32.896Q80.877 32.9287 80.7795 32.9428Q80.682 32.9568 80.5837 32.9516Q80.4853 32.9463 80.3899 32.922Q80.2945 32.8977 80.2056 32.8552Q80.1168 32.8127 80.0379 32.7537Q79.959 32.6947 79.8932 32.6214Q79.8274 32.5482 79.7771 32.4635Q79.7268 32.3788 79.694 32.2859Q79.6612 32.193 79.6472 32.0955Q79.6332 31.998 79.6384 31.8997Q79.6437 31.8013 79.668 31.7059Q79.6923 31.6105 79.7348 31.5216ZM28.4608 32.3844L24.2798 23.6404Q24.2373 23.5515 24.213 23.4561Q24.1887 23.3606 24.1834 23.2623Q24.1782 23.1639 24.1922 23.0665Q24.2062 22.969 24.239 22.8761Q24.2718 22.7832 24.3221 22.6985Q24.3724 22.6138 24.4382 22.5406Q24.504 22.4673 24.5829 22.4083Q24.6618 22.3493 24.7506 22.3068Q24.8395 22.2643 24.9349 22.24Q25.0303 22.2157 25.1287 22.2104Q25.2271 22.2052 25.3245 22.2192Q25.422 22.2332 25.5149 22.266Q25.6078 22.2988 25.6925 22.3491Q25.7772 22.3994 25.8504 22.4652Q25.9237 22.531 25.9827 22.6099Q26.0417 22.6888 26.0842 22.7776L30.2652 31.5216Q30.3077 31.6105 30.332 31.7059Q30.3563 31.8013 30.3616 31.8997Q30.3668 31.9981 30.3528 32.0955Q30.3387 32.193 30.306 32.2859Q30.2732 32.3788 30.2229 32.4635Q30.1726 32.5482 30.1068 32.6214Q30.041 32.6947 29.9621 32.7537Q29.8832 32.8127 29.7944 32.8552Q29.7055 32.8977 29.6101 32.922Q29.5146 32.9463 29.4163 32.9516Q29.3179 32.9568 29.2205 32.9428Q29.123 32.9287 29.0301 32.896Q28.9372 32.8632 28.8525 32.8129Q28.7678 32.7626 28.6946 32.6968Q28.6213 32.631 28.5623 32.5521Q28.5033 32.4732 28.4608 32.3844ZM77.512 50.195L77.512 76.834L76.512 76.834L76.4044 75.8398L83.0644 75.1188L83.172 76.113L82.9912 75.1295Q85.705 74.6307 85.7884 71.5678L86.2304 55.3158Q86.3367 51.376 88.3072 49.7783Q88.6452 49.5047 89.3057 49.0664Q90.5484 48.2419 90.4604 47.6634Q90.3989 47.26 90.2604 46.3305Q87.4933 27.754 84.0689 23.8704Q81.0909 20.4947 71.3075 16.2046Q61.0008 11.685 55 11.685Q48.9991 11.685 38.6926 16.2046Q28.9092 20.4947 25.932 23.8705Q22.505 27.757 19.7383 46.3443Q19.6014 47.2643 19.5406 47.6635Q19.4522 48.2422 20.6937 49.0664Q21.3542 49.5048 21.6914 49.7779Q23.6633 51.3742 23.7696 55.316L24.2116 71.5678Q24.2951 74.6319 27.0093 75.1294L26.829 76.113L26.9365 75.1188L33.5965 75.8388L33.489 76.833L32.489 76.833L32.489 50.196Q32.489 50.0975 32.5082 50.0009Q32.5274 49.9043 32.5651 49.8133Q32.6028 49.7223 32.6575 49.6404Q32.7122 49.5585 32.7819 49.4889Q32.8515 49.4192 32.9334 49.3645Q33.0153 49.3098 33.1063 49.2721Q33.1973 49.2344 33.2939 49.2152Q33.3905 49.196 33.489 49.196Q33.5875 49.196 33.6841 49.2152Q33.7807 49.2344 33.8717 49.2721Q33.9627 49.3098 34.0446 49.3645Q34.1265 49.4192 34.1961 49.4889Q34.2657 49.5585 34.3205 49.6404Q34.3752 49.7223 34.4129 49.8133Q34.4506 49.9043 34.4698 50.0009Q34.489 50.0975 34.489 50.196L34.489 76.833Q34.489 76.8869 34.4832 76.9405Q34.4726 77.0384 34.4431 77.1324Q34.4136 77.2263 34.3664 77.3128Q34.3191 77.3992 34.2559 77.4747Q34.1927 77.5502 34.116 77.612Q34.0393 77.6738 33.952 77.7194Q33.8647 77.765 33.7702 77.7927Q33.6756 77.8204 33.5775 77.8291Q33.4794 77.8378 33.3815 77.8272L26.7215 77.1072Q26.6849 77.1032 26.6487 77.0966Q22.3399 76.3068 22.2124 71.6222L21.7704 55.37Q21.6888 52.349 20.4326 51.3321Q20.1691 51.1186 19.5876 50.7326Q17.2823 49.2023 17.5634 47.3625Q17.6235 46.9675 17.7601 46.0498Q20.6139 26.8777 24.432 22.5475Q27.7014 18.8405 37.8894 14.3729Q48.5799 9.685 55 9.685Q61.42 9.68501 72.1107 14.3729Q82.2986 18.8404 85.5691 22.5476Q89.3844 26.8746 92.2386 46.0359Q92.3769 46.9641 92.4376 47.3626Q92.7176 49.2029 90.4114 50.733Q89.8298 51.1189 89.5668 51.3317Q88.3111 52.3499 88.2296 55.3702L87.7876 71.6222Q87.6601 76.3049 83.3528 77.0965Q83.3164 77.1032 83.2796 77.1072L76.6196 77.8282Q76.566 77.834 76.512 77.834Q76.4135 77.834 76.3169 77.8148Q76.2203 77.7956 76.1293 77.7579Q76.0383 77.7202 75.9564 77.6655Q75.8745 77.6107 75.8049 77.5411Q75.7352 77.4715 75.6805 77.3896Q75.6258 77.3077 75.5881 77.2167Q75.5504 77.1257 75.5312 77.0291Q75.512 76.9325 75.512 76.834L75.512 50.195Q75.512 50.0965 75.5312 49.9999Q75.5504 49.9033 75.5881 49.8123Q75.6258 49.7213 75.6805 49.6394Q75.7352 49.5575 75.8049 49.4879Q75.8745 49.4182 75.9564 49.3635Q76.0383 49.3088 76.1293 49.2711Q76.2203 49.2334 76.3169 49.2142Q76.4135 49.195 76.512 49.195Q76.6105 49.195 76.7071 49.2142Q76.8037 49.2334 76.8947 49.2711Q76.9857 49.3088 77.0676 49.3635Q77.1495 49.4182 77.2191 49.4879Q77.2887 49.5575 77.3435 49.6394Q77.3982 49.7213 77.4359 49.8123Q77.4736 49.9033 77.4928 49.9999Q77.512 50.0965 77.512 50.195ZM80.637 31.953L80.637 46.05L76.512 50.195L76.512 36.575C71.209 33.57 61.718 30.56 55 30.56C48.282 30.56 38.791 33.57 33.488 36.576L33.488 50.196L29.363 46.05L29.363 31.953C33.503 28.957 46.968 23.383 55 23.383C63.032 23.383 76.497 28.957 80.637 31.953ZM81.637 31.953L81.637 46.05Q81.637 46.2483 81.5613 46.4316Q81.4857 46.6148 81.3458 46.7554L77.2208 50.9004Q77.1513 50.9702 77.0696 51.0251Q76.9878 51.08 76.8969 51.1179Q76.806 51.1559 76.7094 51.1753Q76.6129 51.1948 76.5144 51.195Q76.4159 51.1952 76.3193 51.1762Q76.2226 51.1573 76.1315 51.1198Q76.0405 51.0823 75.9584 51.0278Q75.8764 50.9733 75.8066 50.9038Q75.6652 50.7631 75.5886 50.5788Q75.512 50.3945 75.512 50.195L75.512 36.575L76.512 36.575L76.019 37.445Q65.6335 31.56 55 31.56Q44.3647 31.56 33.9811 37.446L33.488 36.576L34.488 36.576L34.488 50.196Q34.488 50.2945 34.4688 50.3911Q34.4496 50.4877 34.4119 50.5787Q34.3742 50.6697 34.3195 50.7516Q34.2647 50.8335 34.1951 50.9031Q34.1255 50.9727 34.0436 51.0275Q33.9617 51.0822 33.8707 51.1199Q33.7797 51.1576 33.6831 51.1768Q33.5865 51.196 33.488 51.196Q33.2884 51.196 33.1041 51.1194Q32.9199 51.0428 32.7791 50.9013L28.6541 46.7553Q28.5143 46.6148 28.4386 46.4315Q28.363 46.2483 28.363 46.05L28.363 31.953Q28.363 31.8344 28.3907 31.7191Q28.4185 31.6038 28.4724 31.4982Q28.5264 31.3925 28.6035 31.3025Q28.6807 31.2124 28.7767 31.1429Q32.4815 28.4618 40.3818 25.6041Q49.2869 22.383 55 22.383Q60.7131 22.383 69.6181 25.6041Q77.5185 28.4619 81.2233 31.1429Q81.3193 31.2124 81.3965 31.3025Q81.4736 31.3925 81.5276 31.4982Q81.5815 31.6038 81.6093 31.7191Q81.637 31.8344 81.637 31.953ZM79.637 31.953L80.637 31.953L80.0507 32.7631Q76.5738 30.2469 68.9379 27.4849Q60.3625 24.383 55 24.383Q49.6375 24.383 41.0622 27.4849Q33.4263 30.2469 29.9493 32.7631L29.363 31.953L30.363 31.953L30.363 46.05L29.363 46.05L30.0719 45.3447L34.1969 49.4907L33.488 50.196L32.488 50.196L32.488 36.576Q32.488 36.4433 32.5226 36.3153Q32.5572 36.1872 32.624 36.0726Q32.6907 35.958 32.7851 35.8647Q32.8795 35.7715 32.9949 35.706Q43.8373 29.56 55 29.56Q66.1608 29.56 77.005 35.705Q77.1204 35.7704 77.2148 35.8636Q77.3092 35.9569 77.376 36.0715Q77.4428 36.1861 77.4774 36.3142Q77.512 36.4423 77.512 36.575L77.512 50.195L76.512 50.195L75.8032 49.4896L79.9282 45.3446L80.637 46.05L79.637 46.05L79.637 31.953ZM47.599 22.976C47.725 24.595 50.021 27.263 51 28.186C51.98 29.107 53.871 30.56 55 30.56C56.129 30.56 58.02 29.107 59 28.185C59.98 27.263 62.275 24.595 62.401 22.976C62.527 21.358 60.433 16.607 55 16.607C49.567 16.607 47.473 21.357 47.599 22.977L47.599 22.976ZM48.596 22.8984Q48.7343 24.6755 51.686 27.4584Q53.9222 29.56 55 29.56Q56.0791 29.56 58.3148 27.4567Q61.2653 24.6807 61.404 22.8984Q61.5074 21.5707 60.0246 19.8341Q58.123 17.607 55 17.607Q51.8768 17.607 49.9754 19.8339Q48.4926 21.5704 48.596 22.8995L47.599 22.977L46.599 22.977L46.599 22.976Q46.599 22.8775 46.6182 22.7809Q46.6374 22.6843 46.6751 22.5933Q46.7128 22.5023 46.7675 22.4204Q46.8222 22.3385 46.8919 22.2689Q46.9615 22.1992 47.0434 22.1445Q47.1253 22.0898 47.2163 22.0521Q47.3073 22.0144 47.4039 21.9952Q47.5005 21.976 47.599 21.976Q47.6926 21.976 47.7846 21.9934Q47.8765 22.0107 47.9637 22.0449Q48.0508 22.079 48.1301 22.1287Q48.2094 22.1784 48.2781 22.242Q48.3468 22.3055 48.4025 22.3807Q48.4582 22.4559 48.499 22.5402Q48.5398 22.6244 48.5643 22.7148Q48.5887 22.8051 48.596 22.8984ZM46.602 23.0536L47.599 22.976L48.599 22.976L48.599 22.977Q48.599 23.0706 48.5816 23.1626Q48.5643 23.2545 48.5301 23.3417Q48.496 23.4288 48.4463 23.5081Q48.3966 23.5874 48.333 23.6561Q48.2694 23.7248 48.1942 23.7806Q48.119 23.8363 48.0348 23.8771Q47.9505 23.9178 47.8602 23.9423Q47.7699 23.9667 47.6765 23.974Q47.5783 23.9816 47.4805 23.97Q47.3827 23.9583 47.2891 23.9278Q47.1955 23.8972 47.1096 23.849Q47.0237 23.8008 46.9488 23.7368Q46.874 23.6728 46.8131 23.5954Q46.7522 23.518 46.7076 23.4302Q46.6629 23.3424 46.6363 23.2476Q46.6096 23.1527 46.602 23.0545Q46.4345 20.9007 48.4544 18.5351Q50.9546 15.607 55 15.607Q59.0452 15.607 61.5456 18.5354Q63.5656 20.9011 63.398 23.0536Q63.1992 25.6073 59.6852 28.9133Q56.8721 31.56 55 31.56Q53.1299 31.56 50.314 28.9136Q46.8003 25.6008 46.602 23.0536ZM49.885 20.07Q49.885 18.3384 51.1565 17.0588Q52.5991 15.607 55 15.607Q57.4001 15.607 58.843 17.0585Q60.115 18.3381 60.115 20.069Q60.115 21.6816 58.4598 23.2552Q56.7897 24.843 55 24.843Q53.2103 24.843 51.5402 23.2552Q49.885 21.6816 49.885 20.069L50.885 20.069L51.885 20.0728L51.885 20.0738Q51.8846 20.1723 51.865 20.2688Q51.8454 20.3654 51.8074 20.4562Q51.7694 20.5471 51.7143 20.6287Q51.6593 20.7104 51.5894 20.7798Q51.5195 20.8492 51.4374 20.9036Q51.3553 20.958 51.2641 20.9953Q51.173 21.0327 51.0763 21.0515Q50.9797 21.0704 50.8812 21.07Q50.7829 21.0696 50.6866 21.0501Q50.5903 21.0306 50.4997 20.9928Q50.409 20.9549 50.3275 20.9001Q50.2459 20.8454 50.1765 20.7758Q50.1072 20.7062 50.0527 20.6244Q49.9983 20.5426 49.9608 20.4518Q49.9232 20.361 49.9041 20.2646Q49.885 20.1683 49.885 20.07ZM51.885 20.07L50.885 20.07L49.885 20.0662L49.885 20.0652Q49.8854 19.9669 49.9049 19.8706Q49.9244 19.7743 49.9622 19.6837Q50.0001 19.593 50.0549 19.5114Q50.1096 19.4299 50.1792 19.3605Q50.2489 19.2912 50.3306 19.2367Q50.4124 19.1823 50.5032 19.1448Q50.594 19.1072 50.6904 19.0881Q50.7868 19.069 50.885 19.069Q50.9835 19.069 51.0801 19.0882Q51.1767 19.1074 51.2677 19.1451Q51.3587 19.1828 51.4406 19.2375Q51.5225 19.2922 51.5921 19.3619Q51.6617 19.4315 51.7165 19.5134Q51.7712 19.5953 51.8089 19.6863Q51.8466 19.7773 51.8658 19.8739Q51.885 19.9705 51.885 20.069Q51.885 20.8234 52.9183 21.8058Q54.0093 22.843 55 22.843Q55.9907 22.843 57.0817 21.8058Q58.115 20.8234 58.115 20.069Q58.115 19.1631 57.4245 18.4685Q56.5682 17.607 55 17.607Q51.885 17.607 51.885 20.07ZM52.7363 21.9663Q53.3898 29.56 55 29.56Q56.6102 29.56 57.2637 21.9663Q57.2721 21.8681 57.2995 21.7735Q57.327 21.6789 57.3723 21.5915Q57.4177 21.5041 57.4792 21.4272Q57.5408 21.3503 57.6161 21.2869Q57.6915 21.2235 57.7778 21.176Q57.864 21.1285 57.9579 21.0987Q58.0518 21.069 58.1497 21.0581Q58.2476 21.0472 58.3457 21.0557Q58.4439 21.0641 58.5385 21.0916Q58.633 21.119 58.7205 21.1643Q58.8079 21.2097 58.8848 21.2712Q58.9617 21.3328 59.0251 21.4081Q59.0885 21.4835 59.136 21.5698Q59.1835 21.656 59.2133 21.7499Q59.243 21.8438 59.2539 21.9417Q59.2648 22.0396 59.2563 22.1377Q58.4455 31.56 55 31.56Q51.5545 31.56 50.7437 22.1377Q50.7352 22.0396 50.7461 21.9417Q50.757 21.8438 50.7867 21.7499Q50.8165 21.656 50.864 21.5698Q50.9115 21.4835 50.9749 21.4081Q51.0383 21.3328 51.1152 21.2712Q51.1921 21.2097 51.2795 21.1643Q51.3669 21.119 51.4615 21.0916Q51.5561 21.0641 51.6543 21.0557Q51.7524 21.0472 51.8503 21.0581Q51.9482 21.069 52.0421 21.0987Q52.136 21.1285 52.2222 21.176Q52.3085 21.2235 52.3839 21.2869Q52.4592 21.3503 52.5208 21.4272Q52.5823 21.5041 52.6277 21.5915Q52.673 21.6789 52.7004 21.7735Q52.7279 21.8681 52.7363 21.9663Z`))
